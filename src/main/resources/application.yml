server:
    port: 8080
spring:
    output:
        ansi:
            enabled: always
    mail:
        protocol: smtp #smtp是邮件发送协议，pop3和imap是邮件接收协议。因为我们要发送邮件，因此是smtp
        host: smtp.qq.com #邮件发送服务器的主机,这里采用qq邮箱服务器
        port: 587
        username: 793166729@qq.com
        password: fbjqemntsyjlbbhh
        properties:
            mail:
                smtp:
                    auth: true
                    starttls:
                        enable: true
                        required: true
    jpa:
        database: mysql
    datasource:
        url: jdbc:mysql:///blog?useUnicode=true&characterEncoding=UTF-8&useSSL=true
        username: root
        password: Ghost007!
        # 使用druid数据源
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        tomcat:
            min-idle: 1
            max-active: 20
            initial-size: 1
            time-between-eviction-runs-millis: 3000
            min-evictable-idle-time-millis: 300000
            test-while-idle: true
            test-on-borrow: false
            test-on-return: false
    redis:
        # redis数据库索引（默认为0），我们使用索引为3的数据库，避免和其他数据库冲突
        database: 3
        # redis服务器地址（默认为localhost）
        host: localhost
        # redis端口（默认为6379）
        port: 6379
        # redis访问密码（默认为空）
        password:
        # redis连接超时时间（单位为毫秒）
        timeout: 0
        # redis连接池配置
        pool:
            # 最大可用连接数（默认为8，负数表示无限）
            max-active: 8
            # 最大空闲连接数（默认为8，负数表示无限）
            max-idle: 8
            # 最小空闲连接数（默认为0，该值只有为正数才有作用）
            min-idle: 0
            # 从连接池中获取连接最大等待时间（默认为-1，单位为毫秒，负数表示无限）
            max-wait: -1
mybatis:
    # mybatis扫描
    mapper-locations: classpath*:mapper/*.xml
    # 起别名.可省略mybatis的xml中的resultType的全路径
    type-aliases-package: org.mystic.blog.pojo
# JWT
jwt:
    header: Authorization
    secret: P@ssw02d
    expiration: 604800
    tokenHead: "Bearer "
    route:
        authentication:
            path: "api/auth"
            refresh: "api/refresh"
            register: "api/auth/register"
            email: "api/auth/email"